security:
    role_hierarchy:
        ROLE_JEFE:       [ROLE_COCINERO, ROLE_CAMARERO]
        ROLE_CAMARERO:   [ROLE_COMANDAS]
        ROLE_COCINERO:   [ROLE_COMANDAS]
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: dni
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            provider: app_user_provider

            form_login:
                login_path: app_login
                check_path: app_login

            logout:
                path: app_logout
                target: app_login

            remember_me:
                secret: '%kernel.secret%'
                
    access_control:
         - { path: ^/admin, roles: ROLE_JEFE }
         - { path: ^/registro, roles: ROLE_JEFE }
         - { path: ^/comandas, roles: ROLE_CAMARERO }
         - { path: ^/comandas2, roles: ROLE_COMANDAS }
         - { path: ^/comandas/visualizar, roles: ROLE_COCINERO }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
